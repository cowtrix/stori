@model Stori.Data.StoriNode

@{
	ViewData["Title"] = "Home";
	IEnumerable<Stori.Data.StoriNode> history = ViewData["history"] as IEnumerable<Stori.Data.StoriNode>;
	IEnumerable<Stori.Data.StoriNode> next = ViewData["next"] as IEnumerable<Stori.Data.StoriNode>;
	Stori.Controllers.StoriCustomController controller = ViewData["controller"] as Stori.Controllers.StoriCustomController;
	const string contentclass = "choice-content-text";
	const string actionclass = "choice-action-text";
}

<script>
	function OnChoiceSelect(choice)
	{
		console.log(choice)
		document.cookie = "@(Stori.Controllers.HomeController.NODE_COOKIE_KEY)=" + choice;
		window.location.reload(false)
	}

	function BeginAgain()
	{
		document.cookie = "@(Stori.Controllers.HomeController.NODE_COOKIE_KEY)=; Max-Age=-99999999;";
		window.location.reload(false)
	}

	$(document).ready(function () {
		console.log("OnReady");
		window.scrollTo(0, document.body.scrollHeight);
	});
</script>

<div class="col">
	@{
		for (var i = 0; i < history.Count(); ++i)
		{
			Stori.Data.StoriNode node = history.ElementAt(i);
			if (!string.IsNullOrEmpty(node.Action))
			{
				<div class="card card-action">
					<div class="card-body row">
						<div class="col">
							@Html.Raw(Stori.Data.StoriNode.MDToHTML(node.Action, actionclass))
						</div>
						<div class="col-auto">
							<div class="row choice-votes" data-toggle="tooltip" data-placement="bottom" title="Views">
								<i class="fa fa-eye padded-icon"></i><span class="badge badge-primary badge-pill">@node.Votes</span>
							</div>
							<div class="row" data-toggle="tooltip" data-placement="bottom" title="Sub-Stories">
								<i class="fa fa-bookmark padded-icon"></i><span class="badge badge-primary badge-pill">@controller.GetSubDocumentCount(node.ID)</span>
							</div>
						</div>
					</div>

				</div>
			}
			<div class="card">
				<div class="card-body">
					@Html.Raw(Stori.Data.StoriNode.MDToHTML(node.Content, contentclass))
				</div>
			</div>
			<div class="card-seperator text-center">
				<i class="fas fa-ellipsis-v"></i>
			</div>
		}
	}

	<div class="card">
		<div class="card-body">
			@{
				if (!Model.Stub && !next.Any())
				{
					<div class="alert alert-dark card-prompt" role="alert">
						You've reached the end of the story so far. What happens next?
					</div>
				}
				else
			}
			<div class="list-group">
				@foreach (Stori.Data.StoriNode node in next)
				{
					<button onclick="OnChoiceSelect('@node.ID')" class="list-group-item d-flex justify-content-between align-items-center card-action">
						@Html.Raw(Stori.Data.StoriNode.MDToHTML(node.Action, actionclass))
						<div class="col-auto">
							<div class="row choice-votes" data-toggle="tooltip" data-placement="bottom" title="Views">
								<i class="fa fa-eye padded-icon"></i><span class="badge badge-primary badge-pill">@node.Votes</span>
							</div>
						</div>
					</button>
				}
				@{
				  if (!Model.Stub)
				  {
				    <a href="@Stori.Controllers.StoriNodesController.ROUTE/create?parent=@Model.ID" class="btn btn-choice btn-block">
					      Create New Choice <i class="fas fa-plus-square"></i>
				    </a>
				  }
				}
				@{
					if (Model.ID != default)
					{
						<button onclick="BeginAgain()" class="btn btn-choice btn-block">
							Begin Again <i class="fas fa-undo-alt"></i>
						</button>
					}
				}
			</div>
		</div>
	</div>
</div>
